{
	"info": {
		"_postman_id": "e16d3027-de9b-48c9-848b-bf60dadf017b",
		"name": "APITesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "all todo entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1 :To confirm the status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test2 : To confirm the Status code name has string\r",
									"pm.test(\"Status code name has OK as a string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3 : to confirm content type\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-URL}}/index.php/todo",
							"host": [
								"{{base-URL}}"
							],
							"path": [
								"index.php",
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "single todo data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1 :To confirm the status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test2 : To confirm the Status code name has string\r",
									"pm.test(\"Status code name has OK as a string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3 : to confirm content type\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-URL}}/index.php/todo/2",
							"host": [
								"{{base-URL}}"
							],
							"path": [
								"index.php",
								"todo",
								"2"
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo"
					},
					"response": []
				}
			]
		},
		{
			"name": "post",
			"item": [
				{
					"name": "post todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test 1: To confirm the test status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201,202);\r",
									"});\r",
									"\r",
									"//Test 2: To confirm Status code name contains correct string\r",
									"pm.test(\"Status code name has created as a string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"//test 3: To confirm response body matches a string\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{New-BaseURL}}/api/user",
							"host": [
								"{{New-BaseURL}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "user record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test 1: To confirm the test status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test 2: To confirm Status code name contains correct string\r",
									"pm.test(\"Status code name has OK as a string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//test 3: To confirm response body matches a string\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{New-BaseURL}}/api/user/2",
							"host": [
								"{{New-BaseURL}}"
							],
							"path": [
								"api",
								"user",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "a user record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test 1: To confirm the test status code\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//Test 2: To confirm Status code name contains correct string\r",
									"pm.test(\"Status code name has No Content as a string\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"//test 3: To confirm response body \r",
									"pm.test(\"\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{New-BaseURL}}/api/user/2",
							"host": [
								"{{New-BaseURL}}"
							],
							"path": [
								"api",
								"user",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}